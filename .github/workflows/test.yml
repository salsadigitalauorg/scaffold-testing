name: Test Scaffold Testing Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: drupal
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      chrome:
        image: selenium/standalone-chrome:111.0
        ports:
          - 4444:4444
        options: >-
          --shm-size="1gb"
          --health-cmd="/opt/bin/check-grid.sh"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y default-mysql-client

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Create project structure
        run: |
          # Create directory and set permissions
          sudo mkdir -p /var/www/html
          sudo chown -R $USER:$USER /var/www/html
          cd /var/www/html
          
          # Copy source files directly
          cp -r $GITHUB_WORKSPACE/src .
          cp -r $GITHUB_WORKSPACE/tests .
          cp $GITHUB_WORKSPACE/phpunit.xml .
          # Use Drupal composer.json
          cp $GITHUB_WORKSPACE/.github/drupal/composer.json .

      - name: Get Composer Cache Directory
        id: composer-cache
        working-directory: /var/www/html
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('/var/www/html/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        working-directory: /var/www/html
        env:
          COMPOSER_DISABLE_XDEBUG_WARN: 1
          COMPOSER_PROCESS_TIMEOUT: 2000
          COMPOSER_DISABLE_UNZIP: 1
        run: |
          composer install --prefer-dist --no-interaction --no-progress

      - name: Set up Drupal
        working-directory: /var/www/html
        run: |
          # Create sites/default directory
          mkdir -p web/sites/default/files
          chmod -R 777 web/sites/default/files

          # Copy default settings file
          cp web/sites/default/default.settings.php web/sites/default/settings.php
          chmod 666 web/sites/default/settings.php

          # Add database configuration
          cat >> web/sites/default/settings.php << 'EOL'

          $databases['default']['default'] = [
            'database' => 'drupal',
            'username' => 'root',
            'password' => 'root',
            'host' => '127.0.0.1',
            'port' => '3306',
            'driver' => 'mysql',
            'prefix' => '',
          ];
          EOL

          # Install Drupal
          ./vendor/bin/drush site:install --db-url=mysql://root:root@127.0.0.1/drupal -y

      - name: Verify Drupal files
        working-directory: /var/www/html
        run: |
          ls -la
          echo "Current directory: $(pwd)"
          echo "Autoloader path: $(realpath vendor/autoload.php)"
          echo "PHPUnit config path: $(realpath phpunit.xml)"
          echo "Drush status:"
          ./vendor/bin/drush status
          echo "Drush requirements:"
          ./vendor/bin/drush core:requirements

      - name: Run PHPUnit tests
        working-directory: /var/www/html
        env:
          XDEBUG_MODE: off
        run: |
          ./vendor/bin/phpunit \
            -v \
            --bootstrap vendor/autoload.php \
            -c phpunit.xml \
            tests/Unit/

      - name: Create test directories
        working-directory: /var/www/html
        run: |
          mkdir -p .logs/screenshots
          mkdir -p .logs/test_results/behat
          chmod -R 777 .logs
          cp $GITHUB_WORKSPACE/.github/behat.gha.yml behat.yml
          # Verify FeatureContext class is available
          ls -la tests/behat/bootstrap/FeatureContext.php
          cat tests/behat/bootstrap/FeatureContext.php | head -n 5

      - name: Run Behat tests
        working-directory: /var/www/html
        run: ./vendor/bin/behat --config=behat.yml 